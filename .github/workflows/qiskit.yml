name: Qiskit
on:
  push:
  pull_request:
  schedule:
    - cron: '0 0,12 * * *'
  workflow_dispatch:


env:
  PLUGIN_REPO: PennyLaneAI/pennylane-qiskit
  PLUGIN_BRANCH: master
  PLUGIN_PACKAGE: pennylane_qiskit
  PENNYLANE_BRANCH: device-test-cli


jobs:
  core-tests:
    runs-on: ubuntu-latest

    strategy:
      fail-fast: false
      matrix:
        config:
          - {pennylane: github, plugin: github}
          - {pennylane: pypi, plugin: pypi}

    steps:
      - name: Cancel Previous Runs
        uses: styfle/cancel-workflow-action@0.4.1
        with:
          access_token: ${{ github.token }}

      - name: Set up Python
        uses: actions/setup-python@v2
        with:
          python-version: 3.7

      - name: Install requirements
        run: |
          pip install --upgrade pip
          pip install --upgrade qiskit
          pip install pyscf==1.7.2
          pip install pytest pytest-mock pytest-cov flaky

      - name: Install Plugin
        run: |
          if [ "${{ matrix.config.plugin }}" == "github" ]; then
            pip install git+https://github.com/${{ env.PLUGIN_REPO }}.git@${{ env.PLUGIN_BRANCH }}
          elif [ "${{ matrix.config.plugin }}" == "pypi" ]; then
            pip install ${{ env.PLUGIN_PACKAGE }}
          fi

      - name: Install PennyLane
        if: contains(matrix.config.pennylane, 'github')
        run: |
          pip uninstall -y pennylane
          pip install git+https://github.com/PennyLaneAI/pennylane.git@${{ env.PENNYLANE_BRANCH }}

      - name: Get plugin version
        id: plugin-version
        if: contains(matrix.config.plugin, 'pypi')
        run: |
          PLUGIN_VERSION=$(python -c "import pkg_resources as pkg; print(pkg.get_distribution('${{ env.PLUGIN_PACKAGE }}').version)")
          echo ::set-output name=version::$PLUGIN_VERSION

      - uses: actions/checkout@v2
        if: contains(matrix.config.plugin, 'git')
        with:
          repository: ${{ env.PLUGIN_REPO }}
          path: plugin_repo
          ref: ${{ env.PLUGIN_BRANCH }}

      - uses: actions/checkout@v2
        if: contains(matrix.config.plugin, 'pypi')
        with:
          repository: ${{ env.PLUGIN_REPO }}
          path: plugin_repo
          ref: v${{ steps.plugin-version.outputs.version }}

      - name: Run PennyLane device integration tests
        if: "contains(matrix.config.pennylane, 'git')"
        run: |
          pl-device-test --device="qiskit.basicaer" --tb=short
          pl-device-test --device="qiskit.aer" --tb=short

      - name: Run plugin tests
        run: python -m pytest plugin_repo/tests --tb=short
