# Workflow template for testing plugins against PennyLane latest

name: quantuminspire-stable-latest
on:
  push:
  pull_request:
  schedule:
    - cron: '0 0 * * *'
  workflow_dispatch:


env:
  PLUGIN_REPO: QuTech-Delft/pennylane-quantuminspire
  PLUGIN_BRANCH: master
  PLUGIN_PACKAGE: pennylane_quantuminspire
  PENNYLANE_BRANCH: master
  IBMQX_TOKEN: ${{ secrets.IBMQX_TOKEN }}
  IONQ_API_KEY: ${{ secrets.IONQ_API_KEY }}
  QI_TOKEN: ${{ secrets.QI_TOKEN }}


jobs:
  tests:
    runs-on: ubuntu-latest

    strategy:
      fail-fast: false

    steps:
      - name: Cancel Previous Runs
        uses: styfle/cancel-workflow-action@0.4.1
        with:
          access_token: ${{ github.token }}

      - name: Set up Python
        uses: actions/setup-python@v2
        with:
          python-version: 3.8

      - name: Install requirements
        run: |
          pip install --upgrade pip
          pip install --upgrade pennylane-qiskit
          pip install --upgrade quantuminspire
          pip install --upgrade qiskit
          pip install pytest pytest-mock pytest-cov flaky
          pip freeze

      - name: Install PennyLane and Plugin
        run: |
          pip install git+https://github.com/PennyLaneAI/pennylane.git \
          ${{ env.PLUGIN_PACKAGE }} --upgrade

      - name: Get plugin version
        id: plugin-version
        run: |
          PLUGIN_VERSION=$(python -c "import pkg_resources as pkg; print(pkg.get_distribution('${{ env.PLUGIN_PACKAGE }}').version)")
          echo ::set-output name=version::$PLUGIN_VERSION

      - uses: actions/checkout@v2
        with:
          repository: ${{ env.PLUGIN_REPO }}
          path: plugin_repo
          ref: v${{ steps.plugin-version.outputs.version }}

      - name: Run PennyLane device integration tests
        run: |
          pl-device-test --device=quantuminspire.qi --tb=short --skip-ops --shots=4096 --device-kwargs backend='QX single-node simulator'

      - name: Run plugin tests
        run: python -m pytest plugin_repo/tests/unit_test --tb=short
